<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My New Hugo Site</title>
    <link>https://sergioib.netlify.app/posts/</link>
    <description>Recent content in Posts on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Mar 2021 10:37:20 +0100</lastBuildDate><atom:link href="https://sergioib.netlify.app/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Aplicaciones PHP en OVH</title>
      <link>https://sergioib.netlify.app/posts/aplicaciones-php-ovh/</link>
      <pubDate>Fri, 12 Mar 2021 10:37:20 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/aplicaciones-php-ovh/</guid>
      <description>Migración de Drupal Este drupal que va a migrarse de la maquina local a la maquina virtual alojada en ovh, es el mismo drupal que se creo en la anterior practica &amp;ldquo;instalacion local de cms php&amp;rdquo;.
 Tarea 1. La aplicación se tendrá que migrar a un nuevo virtualhost al que se accederá con el nombre portal.iesgnXX.es.  Empezamos creando el virtualhost Portal, para ello accedemos a /etc/nginx/sites-availables/ y ejecutamos un sudo cp default portal:</description>
    </item>
    
    <item>
      <title>OVH Lemp</title>
      <link>https://sergioib.netlify.app/posts/ovh-lemp/</link>
      <pubDate>Fri, 12 Mar 2021 09:44:16 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/ovh-lemp/</guid>
      <description>Introduccion En este post instalaremos un servidor Lemp (Linux (E)nginx Mariadb PHP) en una maquina virtual alojada en OVH.
 Tarea 1. Instalacion de servidor web nginx  sudo apt install nginx  Tarea 2. Instala un servidor de base de datos MariaDB. Ejecuta el programa necesario para asegurar el servicio, ya que lo vamos a tener corriendo en el entorno de producción.  sudo apt install -y mariadb-server mariadb-client Una vez que tengamos mariadb instalado, para asegurarlo ejecutamos sudo mysql_secure_installation:</description>
    </item>
    
    <item>
      <title>Servidor Web Nginx</title>
      <link>https://sergioib.netlify.app/posts/servidor-web-nginx/</link>
      <pubDate>Thu, 11 Mar 2021 16:43:41 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/servidor-web-nginx/</guid>
      <description>Tarea 1: Crea una máquina del cloud con una red pública. Añade la clave pública del profesor a la máquina. Instala el servidor web nginx en la máquina. Modifica la página index.html que viene por defecto y accede a ella desde un navegador.
  Entrega la ip flotante de la máquina para que el profesor pueda acceder a ella.
  172.22.200.135
 Entrega una captura de pantalla accediendo a ella.</description>
    </item>
    
    <item>
      <title>Configuracion Cliente VPN con certificado x509</title>
      <link>https://sergioib.netlify.app/posts/configuracio-clientevpn/</link>
      <pubDate>Thu, 11 Mar 2021 16:19:25 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/configuracio-clientevpn/</guid>
      <description>Genera una clave privada RSA 4096  Para generarnos nuestra clave privada rsa hacemos uso del comando openssl:
root@debian-sergio:~# openssl genrsa 4096 &amp;gt; /etc/ssl/private/debian-sergio.ibanez.key Generating RSA private key, 4096 bit long modulus (2 primes) ........................++++ .....................................................................................................................................................................................................................................................................................................................................................................................................................++++ e is 65537 (0x010001)  Genera una solicitud de firma de certificado (fichero CSR) y súbelo a gestiona  Creamos el fichero csr para que sea firmado con el siguiente comando y rellenamos los parámetros necesarios que se nos piden: Country Name, State or Province Name (full name), Locality Name, Organization Name, Organizational Unit Name y Common Name (e.</description>
    </item>
    
    <item>
      <title>Configuracion Apache con .htaccess</title>
      <link>https://sergioib.netlify.app/posts/configuracion-apache-con-htaccess/</link>
      <pubDate>Thu, 11 Mar 2021 16:17:14 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/configuracion-apache-con-htaccess/</guid>
      <description>Date de alta en un proveedor de hosting. ¿Si necesitamos configurar el servidor web que han configurado los administradores del proveedor?, ¿qué podemos hacer? Explica la directiva AllowOverride de apache2. Utilizando archivos .htaccess realiza las siguientes configuraciones:  Se ha dado de alta en 000.webhost
 Tarea1: Habilita el listado de ficheros en la URL http://host.dominio/nas.  Configuramos el fichero .htaccess añadiéndole la siguiente linea:
Options +Indexes Creamos una carpeta llamada nas y un par de ficheros para hacer una prueba de funcionamiento.</description>
    </item>
    
    <item>
      <title>Control De Acceso Autentificacion Autorizacion</title>
      <link>https://sergioib.netlify.app/posts/control-de-acceso-autentificacion-autorizacion/</link>
      <pubDate>Thu, 11 Mar 2021 16:13:52 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/control-de-acceso-autentificacion-autorizacion/</guid>
      <description>Tarea1: A la URL departamentos.iesgn.org/intranet sólo se debe tener acceso desde el cliente de la red local, y no se pueda acceder desde la anfitriona por la red pública. A la URL departamentos.iesgn.org/internet, sin embargo, sólo se debe tener acceso desde la anfitriona por la red pública, y no desde la red local.  Empezamos modificando el fichero departamentos.conf en /etc/apache2/sites-available de la siguiente forma:
ServerAdmin webmaster@localhost DocumentRoot /srv/www/departamentos ServerName www.</description>
    </item>
    
    <item>
      <title>Compilacion Programa C con Makefile</title>
      <link>https://sergioib.netlify.app/posts/compilacion-programac-makefile/</link>
      <pubDate>Thu, 11 Mar 2021 16:10:39 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/compilacion-programac-makefile/</guid>
      <description>Compilacion paquete less Empezaremos ejecutando el siguiente comando para tener el código fuente del paquete que vamos a compilar que en este caso a modo de prueba se compilara el paquete less.
apt source less Una vez que se tenga el código en nuestra maquina, lo siguiente sera descomprimirlo ejecutando el comando tar.
tar xvzf less_487.orig.tar.gz Dentro del directorio less ejecutamos ./configure para comprobar si el paquete esta bien configurado para el sistema.</description>
    </item>
    
    <item>
      <title>Integridad Firmas Autentificacion</title>
      <link>https://sergioib.netlify.app/posts/integridad-firmas-autentificacion/</link>
      <pubDate>Thu, 11 Mar 2021 16:00:38 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/integridad-firmas-autentificacion/</guid>
      <description>Firmas electrónicas  Manda un documento y la firma electrónica del mismo a un compañero. Verifica la firma que tu has recibido.  Creamos el fichero firmado:
sergioib@debian-sergio:~/Descargas$ gpg --output doc.sig --sign Triggers_I.ppt Verificacion de la firma de documento con compañero Lora:
sergioib@debian-sergio:~/Descargas$ gpg --output lora --decrypt documentolora.pdf.sig gpg: Firmado el mié 14 oct 2020 13:37:44 CEST gpg: usando RSA clave 9233303D1F5495739A6D2CB4636AE9EBCB7E3294 gpg: Firma correcta de &amp;quot;Manuel Lora Román &amp;lt;manuelloraroman@gmail.com&amp;gt;&amp;quot; [desconocido] gpg: ATENCIÓN: ¡Esta clave no está certificada por una firma de confianza!</description>
    </item>
    
    <item>
      <title>Instalacion Local CMS Php</title>
      <link>https://sergioib.netlify.app/posts/instalacion-local-cms-php/</link>
      <pubDate>Thu, 11 Mar 2021 10:13:49 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/instalacion-local-cms-php/</guid>
      <description>Instalación de un servidor LAMP  Crea una instancia de vagrant basado en un box debian o ubuntu  Ejecutamos vagrant init en el directorio donde crearemos el vagrantfile.
Configuración del vagrantfile:
Vagrant.configure(&amp;quot;2&amp;quot;) do |config| config.vm.define :nodo1 do |nodo1| nodo1.vm.box = &amp;quot;debian/buster64&amp;quot; nodo1.vm.hostname = &amp;quot;server&amp;quot; nodo1.vm.network :private_network, type: &amp;quot;dhcp&amp;quot; end Una vez configurado el vagrantfile levantamos el escenario usando vagrant up y luego nos conectamos al servidor con vagrant ssh</description>
    </item>
    
    <item>
      <title>Mapeo URL Virtualhost</title>
      <link>https://sergioib.netlify.app/posts/mapeo-url-servidor-dhcp/</link>
      <pubDate>Thu, 11 Mar 2021 09:54:31 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/mapeo-url-servidor-dhcp/</guid>
      <description>Crea un nuevo host virtual que es accedido con el nombre www.mapeo.com, cuyo DocumentRoot sea /srv/mapeo.  Creación del fichero .conf
vagrant@nodo1:/etc/apache2/sites-available$ sudo cp 000-default.conf mapeo.conf Modificaciones en mapeo.conf
&amp;lt;VirtualHost *:80&amp;gt; ServerAdmin webmaster@localhost DocumentRoot /srv/mapeo ServerName www.mapeo.com ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined &amp;lt;/VirtualHost&amp;gt; Creamos el directorio en srv
vagrant@nodo1:/srv$ sudo mkdir -p mapeo/principal vagrant@nodo1:/srv$ chown -R www-data:www-data mapeo/ Configuración apache2
&amp;lt;Directory /srv/&amp;gt; Options Indexes FollowSymLinks AllowOverride None Require all granted &amp;lt;/Directory&amp;gt; Creación del enlace simbólico</description>
    </item>
    
    <item>
      <title>Virtualhost Apache</title>
      <link>https://sergioib.netlify.app/posts/virtualhost-apache/</link>
      <pubDate>Thu, 11 Mar 2021 09:47:06 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/virtualhost-apache/</guid>
      <description>Configuración de VirtualHosting Lo primero sera instalar apache2 en nuestra maquina virtual vagrant.
sudo apt install apache2 Una vez descargado apache2, creamos los ficheros.conf que usaran tanto www.iesgn.org como www.departamentosgn.org para ello primero copiamos el 000-default para crearlos y luego los modificamos dejándolos de la siguiente forma:
vagrant@nodo1:/etc/apache2/sites-available$ sudo cp 000-default.conf iesgn.conf vagrant@nodo1:/etc/apache2/sites-available$ sudo cp 000-default.conf departamentos.conf Modificaciones de iesgn.conf y departamentos.conf  iesgn.conf:  &amp;lt;VirtualHost *:80&amp;gt; ServerAdmin webmaster@localhost DocumentRoot /srv/www/iesgn ServerName www.</description>
    </item>
    
    <item>
      <title>Servidor DHCP Linux</title>
      <link>https://sergioib.netlify.app/posts/servidor-dhcp-linux/</link>
      <pubDate>Thu, 11 Mar 2021 09:33:55 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/servidor-dhcp-linux/</guid>
      <description>Funcionamiento de un servidor DHCP El cliente al iniciarse se encuentra en estado init, sin saber sus parámetros ip en ese momento envía un mensaje DHCPDiscover a la dirección de broadcast para saber si algún servidor dhcp le puede ofrecer una ip. El cliente espera un tiempo entre 1 y 10 seg al enviar este dhcpdiscover para evitar posibles colisiones con otras peticiones de otros clientes.
Cuando ya se ha mandado el dhcpdiscover el cliente entra en fase selecting, en la que recibira las dhcpoffer de los servidores dhcp.</description>
    </item>
    
    <item>
      <title>Cifrado Asimetrico Gpg Y Openssl</title>
      <link>https://sergioib.netlify.app/posts/cifrado-asimetrico-gpg-y-openssl/</link>
      <pubDate>Thu, 11 Mar 2021 09:15:13 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/cifrado-asimetrico-gpg-y-openssl/</guid>
      <description>Tarea 1: Generación de claves  Genera un par de claves (pública y privada). ¿En que directorio se guarda las claves de un usuario?  gpg --gen-key Se nos piden algunos datos como nombre y apellidos, correo y contraseña y una vez introducida la información, se ve que la clave se nos crea en un directorio oculto .gnupg
 gpg: clave CFCF1D130D5A52C5 marcada como de confianza absoluta gpg: creado el directorio &#39;/home/sergioib/.</description>
    </item>
    
    <item>
      <title>Creacion Blog Hugo</title>
      <link>https://sergioib.netlify.app/posts/creacion-blog-hugo/</link>
      <pubDate>Thu, 11 Mar 2021 08:07:44 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/creacion-blog-hugo/</guid>
      <description>Introducción En este post se hablara de como ha sido creado este blog donde se van a ir metiendo varios trabajos y apuntos relacionados con el grado superior de Administracion de Sistemas Informaticos en Red (ASIR).
Creación del blog Para poder crear nuestro blog con hugo, lo primero que necesitaremos sera instalar hugo en nuestro sistema, en mi caso debian10. Esta instalacion la podemos hacer de la siguiente forma:
sudo apt install hugo Sin embargo, en mi caso por defecto se instala la version 0.</description>
    </item>
    
    <item>
      <title>Instalacion de debian10</title>
      <link>https://sergioib.netlify.app/posts/instalacion-debian10/</link>
      <pubDate>Wed, 10 Mar 2021 21:20:45 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/instalacion-debian10/</guid>
      <description>Instacacion Debian 10 Introducción En un portátil (HP pavilion 15) con 1TB de disco se crearan particiones LVM donde se instalara un sistema debían 10. En el caso de mi disco ya tiene dos particiones en disco dedicadas a Windows 10 y otros, por lo que como Windows no es compatible con LVM, esas dos particiones no se van a tocar y la partición para Linux ocupara 500GB.
Ventajas de instalar el sistema en particiones lvm   Permite un almacenamiento mas flexible de archivos que haciendo particiones normales, ya que si a lo largo del tiempo se acaba el espacio de la partición puede redimensionarse e incluso añadir discos adicionales para aumentar el tamaño.</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sistemas on El rincon del admin</title>
    <link>https://sergioib.netlify.app/categories/sistemas/</link>
    <description>Recent content in Sistemas on El rincon del admin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 May 2021 15:28:17 +0200</lastBuildDate><atom:link href="https://sergioib.netlify.app/categories/sistemas/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Active Directory</title>
      <link>https://sergioib.netlify.app/posts/active-directory/</link>
      <pubDate>Sun, 23 May 2021 15:28:17 +0200</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/active-directory/</guid>
      <description>¿Que es? Active Directory es un servicio de directorio que almacena objetos de datos en su entorno de red local. El servicio registra datos en los usuarios, dispositivos, aplicaciones, grupos, y dispositivos en una estructura jerárquica.
La estructura de los datos permite encontrar los detalles de los recursos conectados a la red desde una ubicación. En esencia, Active Directory actúa como un directorio telefónico para su red, por lo que puede buscar y administrar dispositivos fácilmente.</description>
    </item>
    
    <item>
      <title>Bacula</title>
      <link>https://sergioib.netlify.app/posts/bacula/</link>
      <pubDate>Sun, 14 Mar 2021 12:08:28 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/bacula/</guid>
      <description>Introduccion Bacula es un sistema de copias de seguridad que funciona como cliente y servidor. Este sistema de copias de seguridad va a ser instalado en una de las maquinas virtuales de nuestro escenario openstack que hemos creado en posts anteriores, mas concretamente como bacula necesita de una base de datos mariadb, se usara nuestra maquina Sancho (servidor de base de datos del escenario openstack) como servidor de copias de seguridad y las demas maquinas haran de clientes.</description>
    </item>
    
    <item>
      <title>Montaje de pila ELK</title>
      <link>https://sergioib.netlify.app/posts/montaje-de-pila-elk/</link>
      <pubDate>Fri, 12 Mar 2021 18:22:23 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/montaje-de-pila-elk/</guid>
      <description>¿Que es una pila ELK? Es un conjunto de herramientas de gran potencial de código abierto que se combinan para crear una herramienta de administración de registros permitiendo la monitorización, consolidación y análisis de logs generados en múltiples servidores, estas herramientas son:ElasticSearch, Logstash y Kibana.
Para poder montar la pila completa sera necesario que la maquina que aloje las tres maquinas tenga mas de 2Gb de ram. Tambien es posible instalar estas herramientas en equipos distintos, sin embarlo la maquina donde se instale elasticsearch necesitara un minimo de 2gb.</description>
    </item>
    
    <item>
      <title>Sistemas de ficheros Btrfs</title>
      <link>https://sergioib.netlify.app/posts/sistemas-de-ficheros-btrfs/</link>
      <pubDate>Fri, 12 Mar 2021 17:50:31 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/sistemas-de-ficheros-btrfs/</guid>
      <description>• Crea un escenario que incluya una máquina y varios discos asociados a ella.
El escenario con el que contamos para esta practica es el de una maquina virtual con sistema operativo debían 10 creada con vagrant con 4 discos adicionales en el que se instalara un Raid5 usando los 3 primeros discos, y el ultimo disco se dejara para posteriormente comprobar sustituciones de discos simulando fallos.
vagrant@Btrfs:~$ lsblk -f NAME FSTYPE LABEL UUID FSAVAIL FSUSE% MOUNTPOINT sda ├─sda1 ext4 983742b1-65a8-49d1-a148-a3865ea09e24 16.</description>
    </item>
    
    <item>
      <title>Usuarios, grupos y ACLs en Ldap</title>
      <link>https://sergioib.netlify.app/posts/usuarios-grupos-y-acls-en-ldap/</link>
      <pubDate>Fri, 12 Mar 2021 14:14:51 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/usuarios-grupos-y-acls-en-ldap/</guid>
      <description>Crea 10 usuarios con los nombres que prefieras en LDAP, esos usuarios deben ser objetos de los tipos posixAccount e inetOrgPerson. Estos usuarios tendrán un atributo userPassword.  Para crear estos usuarios, creamos un fichero .ldif llamado por ejemplo usuarios con el siguiente contenido:
dn: uid=sergio,ou=People,dc=sergio,dc=gonzalonazareno,dc=org objectClass: top objectClass: posixAccount objectClass: inetOrgPerson cn: Sergio Ibañez uid: sergio uidNumber: 2000 gidNumber: 2000 homeDirectory: /home/sergio loginShell: /bin/bash userPassword: {SSHA}PkyDS12f+fo6sR3uHGsY25CvUjMrmrVy sn: ibañez dn: uid=manuel,ou=People,dc=sergio,dc=gonzalonazareno,dc=org objectClass: top objectClass: posixAccount objectClass: inetOrgPerson cn: Manuel Lora uid: manuel uidNumber: 2001 gidNumber: 2001 homeDirectory: /home/lora loginShell: /bin/bash userPassword: {SSHA}ODN7zIXBS0rDW+Uf9Z1J1/GUcBXhtrS/ sn: lora dn: uid=juanan,ou=People,dc=sergio,dc=gonzalonazareno,dc=org objectClass: top objectClass: posixAccount objectClass: inetOrgPerson cn: Juan Antonio uid: juanan uidNumber: 2002 gidNumber: 2002 homeDirectory: /home/juanan loginShell: /bin/bash userPassword: {SSHA}V+mrXKnbB/ReYwrdQ7Gh85ZQZw1A2iqs sn: reifs dn: uid=fran,ou=People,dc=sergio,dc=gonzalonazareno,dc=org objectClass: top objectClass: posixAccount objectClass: inetOrgPerson cn: Fran Madueño uid: fran uidNumber: 2003 gidNumber: 2003 homeDirectory: /home/fran loginShell: /bin/bash userPassword: {SSHA}RnYnua1fD3L1UCc4arAfVrfNWrokHsoF sn: madueño dn: uid=alejandro,ou=People,dc=sergio,dc=gonzalonazareno,dc=org objectClass: top objectClass: posixAccount objectClass: inetOrgPerson cn: Alejando Gutierrez uid: alejandro uidNumber: 2004 gidNumber: 2004 homeDirectory: /home/alejandro loginShell: /bin/bash userPassword: {SSHA}H4js7CR0IjdgRIYJFtHA7zkq7+9gWNff sn: gutierrez dn: uid=calderon,ou=People,dc=sergio,dc=gonzalonazareno,dc=org objectClass: top objectClass: posixAccount objectClass: inetOrgPerson cn: Jose Miguel uid: calderon uidNumber: 2005 gidNumber: 2005 homeDirectory: /home/calderon loginShell: /bin/bash userPassword: {SSHA}ioP7oyy5KXGXmTQE8sLajhSTPV0bUyVk sn: calderon dn: uid=adrian,ou=People,dc=sergio,dc=gonzalonazareno,dc=org objectClass: top objectClass: posixAccount objectClass: inetOrgPerson cn: Adrian Jaramillo uid: adrian uidNumber: 2006 gidNumber: 2006 homeDirectory: /home/adrian loginShell: /bin/bash userPassword: {SSHA}jGxqVD3yK9yRm8qtWVuFW7du/I75p9Qv sn: jaramillo dn: uid=celia,ou=People,dc=sergio,dc=gonzalonazareno,dc=org objectClass: top objectClass: posixAccount objectClass: inetOrgPerson cn: Celia Garcia uid: celia uidNumber: 2007 gidNumber: 2007 homeDirectory: /home/celia loginShell: /bin/bash userPassword: {SSHA}WQ8IgcfkrrAz5sNwfqsdJhBtNXHJ1OyQ sn: garcia dn: uid=alvaro,ou=People,dc=sergio,dc=gonzalonazareno,dc=org objectClass: top objectClass: posixAccount objectClass: inetOrgPerson cn: Alvaro Vaca uid: alvaro uidNumber: 2008 gidNumber: 2008 homeDirectory: /home/alvaro loginShell: /bin/bash userPassword: {SSHA}W0XxEk1ojVDliy4jIN3IyZ4RVqFwiLxi sn: vaca dn: uid=juanlu,ou=People,dc=sergio,dc=gonzalonazareno,dc=org objectClass: top objectClass: posixAccount objectClass: inetOrgPerson cn: Juan Luis uid: juanlu uidNumber: 2009 gidNumber: 2009 homeDirectory: /home/juanlu loginShell: /bin/bash userPassword: {SSHA}u+yL9u8EiUlYVKHvsD+j+Ww7iOGaNOBW sn: millan En este fichero, la estructura con la que se van a crear los usuarios es la misma:</description>
    </item>
    
    <item>
      <title>Ldaps</title>
      <link>https://sergioib.netlify.app/posts/ldaps/</link>
      <pubDate>Fri, 12 Mar 2021 14:13:08 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/ldaps/</guid>
      <description>LDAPs Lo primero que tendremos que hacer para usar ldaps, sera tener tanto un certificado .crt de la unidad certificadora, en este caso el IES Gonzalo Nazareno, un .crt firmado por la unidad certificadora y un fichero .key usado para crear un fichero csr que posteriormente se firmará.
Después de crear los certificados y ubicarlos en /etc/ssl/certs/ (los ficheros .crt) y el fichero .key en /etc/ssl/private/, hay que cambiar las acl con el comando setfacl para agregar los permisos:</description>
    </item>
    
    <item>
      <title>Instalacion y configuracion OpenLDAP</title>
      <link>https://sergioib.netlify.app/posts/instalacion-y-configuracion-openldap/</link>
      <pubDate>Fri, 12 Mar 2021 14:11:19 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/instalacion-y-configuracion-openldap/</guid>
      <description>Instalación Ldap sudo apt install slapd Por defecto nuestro dn será dc=gonzalonazareno,dc=org por lo que se cambiara la configuración básica de slapd de forma que coja como dn el nombre completo de nuestro servidor, que en mi caso es freston-sergio.gonzalonazareno.org, este cambio lo hacemos ejecutando:
sudo dpkg-reconfigure -plow slapd Indicando primero cual sera el nuevo nombre de dominio que usara ldap y después cambiando el nombre de la organización a IES Gonzalo Nazareno.</description>
    </item>
    
    <item>
      <title>Actualizacion de Centos7 a Centos8</title>
      <link>https://sergioib.netlify.app/posts/actualizacion-centos8/</link>
      <pubDate>Fri, 12 Mar 2021 12:52:53 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/actualizacion-centos8/</guid>
      <description>Introduccion Esta practica se realizara en nuestra maquina Quijote del escenario opestack creado anteriormente.
* Actualizacion de Centos 7 a Centos 8 en la maquina quijote* Antes de comenzar con la actualización comprobamos la versión de nuestra maquina centos:
[centos@quijote ~]$ cat /etc/centos-release CentOS Linux release 7.9.2009 (Core) En este caso comenzaremos con la version 7.9.2009 de centos.
Instalamos el repositorio epel en nuestro centos 7:
sudo yum install -y epel-release.</description>
    </item>
    
    <item>
      <title>Compilacion programa C con Makefile</title>
      <link>https://sergioib.netlify.app/posts/compilacion-programac-makefile/</link>
      <pubDate>Thu, 11 Mar 2021 16:10:39 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/compilacion-programac-makefile/</guid>
      <description>Compilacion paquete less Empezaremos ejecutando el siguiente comando para tener el código fuente del paquete que vamos a compilar que en este caso a modo de prueba se compilara el paquete less.
apt source less Una vez que se tenga el código en nuestra maquina, lo siguiente sera descomprimirlo ejecutando el comando tar.
tar xvzf less_487.orig.tar.gz Dentro del directorio less ejecutamos ./configure para comprobar si el paquete esta bien configurado para el sistema.</description>
    </item>
    
    <item>
      <title>Instalacion de Debian10</title>
      <link>https://sergioib.netlify.app/posts/instalacion-debian10/</link>
      <pubDate>Wed, 10 Mar 2021 21:20:45 +0100</pubDate>
      
      <guid>https://sergioib.netlify.app/posts/instalacion-debian10/</guid>
      <description>Instacacion Debian 10 Introducción En un portátil (HP pavilion 15) con 1TB de disco se crearan particiones LVM donde se instalara un sistema debían 10. En el caso de mi disco ya tiene dos particiones en disco dedicadas a Windows 10 y otros, por lo que como Windows no es compatible con LVM, esas dos particiones no se van a tocar y la partición para Linux ocupara 500GB.
Ventajas de instalar el sistema en particiones lvm   Permite un almacenamiento mas flexible de archivos que haciendo particiones normales, ya que si a lo largo del tiempo se acaba el espacio de la partición puede redimensionarse e incluso añadir discos adicionales para aumentar el tamaño.</description>
    </item>
    
  </channel>
</rss>
